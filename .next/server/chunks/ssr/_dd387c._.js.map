{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/conor/dog-website/client/src/app/admin/page.tsx"],"sourcesContent":["\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\ninterface Dog {\r\n  id: number;\r\n  name: string;\r\n  breed: string;\r\n  image: string;\r\n  price: number;\r\n}\r\n\r\ninterface Statistics {\r\n  total_dogs: number;\r\n  unique_breeds: number;\r\n  breed_distribution: Record<string, number>;\r\n  total_inventory_value: number;\r\n  average_price: number;\r\n}\r\n\r\nexport default function AdminPage() {\r\n  const router = useRouter();\r\n  const [dogs, setDogs] = useState<Dog[]>([]);\r\n  const [stats, setStats] = useState<Statistics | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  \r\n  // Form states for adding/editing dogs\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentDog, setCurrentDog] = useState<Dog | null>(null);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    breed: \"\",\r\n    image: \"\",\r\n    price: 0,\r\n  });\r\n\r\n  // Fetch dashboard data\r\n  useEffect(() => {\r\n    async function fetchDashboard() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/admin/dashboard\", {\r\n          method: \"GET\",\r\n          credentials: \"include\",\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          if (response.status === 403) {\r\n            alert(\"Please login to access the admin dashboard\");\r\n            router.push(\"/login\");\r\n            return;\r\n          }\r\n          throw new Error(\"Failed to fetch dashboard data\");\r\n        }\r\n        \r\n        const data = await response.json();\r\n        setDogs(data.dogs);\r\n        setStats(data.statistics);\r\n      } catch (err) {\r\n        setError(\"Failed to load dashboard data\");\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    \r\n    fetchDashboard();\r\n  }, [router]);\r\n\r\n  // Handle form input changes\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: name === \"price\" ? parseFloat(value) : value,\r\n    });\r\n  };\r\n\r\n  // Add new dog\r\n  const handleAddDog = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/admin\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(formData),\r\n      });\r\n      \r\n      if (!response.ok) throw new Error(\"Failed to add dog\");\r\n      \r\n      const result = await response.json();\r\n      setDogs([...dogs, result.data[0]]);\r\n      setFormData({ name: \"\", breed: \"\", image: \"\", price: 0 });\r\n      alert(\"Dog added successfully!\");\r\n      \r\n      // Refresh dashboard data\r\n      const dashboardResponse = await fetch(\"http://localhost:5000/admin/dashboard\", {\r\n        credentials: \"include\",\r\n      });\r\n      const dashboardData = await dashboardResponse.json();\r\n      setStats(dashboardData.statistics);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error adding dog\");\r\n    }\r\n  };\r\n\r\n  // Start editing a dog\r\n  const handleEdit = (dog: Dog) => {\r\n    setIsEditing(true);\r\n    setCurrentDog(dog);\r\n    setFormData({\r\n      name: dog.name,\r\n      breed: dog.breed,\r\n      image: dog.image,\r\n      price: dog.price,\r\n    });\r\n  };\r\n\r\n  // Update existing dog\r\n  const handleUpdateDog = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!currentDog) return;\r\n    \r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/admin\", {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({\r\n          id: currentDog.id,\r\n          ...formData,\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) throw new Error(\"Failed to update dog\");\r\n      \r\n      const result = await response.json();\r\n      setDogs(dogs.map(dog => dog.id === currentDog.id ? result.data[0] : dog));\r\n      setIsEditing(false);\r\n      setCurrentDog(null);\r\n      setFormData({ name: \"\", breed: \"\", image: \"\", price: 0 });\r\n      alert(\"Dog updated successfully!\");\r\n      \r\n      // Refresh dashboard data\r\n      const dashboardResponse = await fetch(\"http://localhost:5000/admin/dashboard\", {\r\n        credentials: \"include\",\r\n      });\r\n      const dashboardData = await dashboardResponse.json();\r\n      setStats(dashboardData.statistics);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error updating dog\");\r\n    }\r\n  };\r\n\r\n  // Delete a dog\r\n  const handleDelete = async (id: number) => {\r\n    if (!confirm(\"Are you sure you want to delete this dog?\")) return;\r\n    \r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/admin\", {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({ id }),\r\n      });\r\n      \r\n      if (!response.ok) throw new Error(\"Failed to delete dog\");\r\n      \r\n      setDogs(dogs.filter(dog => dog.id !== id));\r\n      alert(\"Dog deleted successfully!\");\r\n      \r\n      // Refresh dashboard data\r\n      const dashboardResponse = await fetch(\"http://localhost:5000/admin/dashboard\", {\r\n        credentials: \"include\",\r\n      });\r\n      const dashboardData = await dashboardResponse.json();\r\n      setStats(dashboardData.statistics);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error deleting dog\");\r\n    }\r\n  };\r\n\r\n  // Cancel editing\r\n  const handleCancel = () => {\r\n    setIsEditing(false);\r\n    setCurrentDog(null);\r\n    setFormData({ name: \"\", breed: \"\", image: \"\", price: 0 });\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-3xl font-bold mb-8\">Admin Dashboard</h1>\r\n\r\n      {/* Statistics Section */}\r\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Dog Inventory Statistics</h2>\r\n        {stats && (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <div className=\"p-4 bg-blue-50 rounded-lg\">\r\n              <p className=\"text-sm text-gray-600\">Total Dogs</p>\r\n              <p className=\"text-2xl font-bold\">{stats.total_dogs}</p>\r\n            </div>\r\n            <div className=\"p-4 bg-green-50 rounded-lg\">\r\n              <p className=\"text-sm text-gray-600\">Unique Breeds</p>\r\n              <p className=\"text-2xl font-bold\">{stats.unique_breeds}</p>\r\n            </div>\r\n            <div className=\"p-4 bg-purple-50 rounded-lg\">\r\n              <p className=\"text-sm text-gray-600\">Average Price</p>\r\n              <p className=\"text-2xl font-bold\">${stats.average_price.toFixed(2)}</p>\r\n            </div>\r\n            <div className=\"p-4 bg-yellow-50 rounded-lg md:col-span-3\">\r\n              <p className=\"text-sm text-gray-600\">Total Inventory Value</p>\r\n              <p className=\"text-2xl font-bold\">${stats.total_inventory_value.toFixed(2)}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Breed Distribution */}\r\n        {stats && (\r\n          <div className=\"mt-6\">\r\n            <h3 className=\"text-lg font-semibold mb-2\">Breed Distribution</h3>\r\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\r\n              {Object.entries(stats.breed_distribution).map(([breed, count]) => (\r\n                <div key={breed} className=\"p-3 bg-gray-50 rounded\">\r\n                  <span className=\"font-medium\">{breed}: </span>\r\n                  <span>{count} dogs</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Dog Form */}\r\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">\r\n          {isEditing ? \"Edit Dog\" : \"Add New Dog\"}\r\n        </h2>\r\n        <form onSubmit={isEditing ? handleUpdateDog : handleAddDog}>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block mb-1\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n                className=\"w-full border rounded-md p-2\"\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block mb-1\">Breed</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"breed\"\r\n                value={formData.breed}\r\n                onChange={handleInputChange}\r\n                className=\"w-full border rounded-md p-2\"\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block mb-1\">Image URL</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"image\"\r\n                value={formData.image}\r\n                onChange={handleInputChange}\r\n                className=\"w-full border rounded-md p-2\"\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block mb-1\">Price ($)</label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"price\"\r\n                value={formData.price}\r\n                onChange={handleInputChange}\r\n                className=\"w-full border rounded-md p-2\"\r\n                min=\"0\"\r\n                step=\"0.01\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-4 flex gap-2\">\r\n            <button\r\n              type=\"submit\"\r\n              className={`px-4 py-2 text-white rounded ${\r\n                isEditing ? \"bg-yellow-500\" : \"bg-blue-500\"\r\n              }`}\r\n            >\r\n              {isEditing ? \"Update Dog\" : \"Add Dog\"}\r\n            </button>\r\n            {isEditing && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleCancel}\r\n                className=\"px-4 py-2 bg-gray-500 text-white rounded\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Dog List */}\r\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Dog Inventory</h2>\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"px-4 py-2 text-left\">ID</th>\r\n                <th className=\"px-4 py-2 text-left\">Image</th>\r\n                <th className=\"px-4 py-2 text-left\">Name</th>\r\n                <th className=\"px-4 py-2 text-left\">Breed</th>\r\n                <th className=\"px-4 py-2 text-left\">Price</th>\r\n                <th className=\"px-4 py-2 text-left\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {dogs.map((dog) => (\r\n                <tr key={dog.id} className=\"border-b\">\r\n                  <td className=\"px-4 py-2\">{dog.id}</td>\r\n                  <td className=\"px-4 py-2\">\r\n                    <img \r\n                      src={dog.image} \r\n                      alt={dog.name} \r\n                      className=\"w-16 h-16 object-cover rounded\"\r\n                    />\r\n                  </td>\r\n                  <td className=\"px-4 py-2\">{dog.name}</td>\r\n                  <td className=\"px-4 py-2\">{dog.breed}</td>\r\n                  <td className=\"px-4 py-2\">${dog.price.toFixed(2)}</td>\r\n                  <td className=\"px-4 py-2 space-x-2\">\r\n                    <button\r\n                      onClick={() => handleEdit(dog)}\r\n                      className=\"px-3 py-1 bg-yellow-500 text-white rounded\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleDelete(dog.id)}\r\n                      className=\"px-3 py-1 bg-red-500 text-white rounded\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 781, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 792, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 792, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}