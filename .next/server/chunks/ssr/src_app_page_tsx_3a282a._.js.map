{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/conor/dog-website/client/src/app/page.tsx"],"sourcesContent":["'use client';\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { useRouter } from 'next/navigation';\n\ninterface Dog {\n    id: string;\n    name: string;\n    image: string;\n    breed: string;\n    price: number;\n}\n\nexport default function Home() {\n    const [dogs, setDogs] = useState<Dog[]>([]);\n    const [page, setPage] = useState(1);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n    const [breeds, setBreeds] = useState<string[]>([]);\n    const [selectedBreeds, setSelectedBreeds] = useState<string[]>([]);\n    const [priceRange, setPriceRange] = useState({ min: '', max: '' });\n    const router = useRouter();\n\n    // Get unique breeds from dogs data\n    useEffect(() => {\n        const fetchBreeds = async () => {\n            try {\n                const response = await fetch('http://localhost:5000/dogs');\n                if (response.ok) {\n                    const data = await response.json();\n                    const uniqueBreeds = Array.from(new Set(data.dogs.map((dog: Dog) => dog.breed)));\n                    setBreeds(uniqueBreeds as string[]);\n                }\n            } catch (err) {\n                console.error('Error fetching breeds:', err);\n            }\n        };\n\n        fetchBreeds();\n    }, []);\n\n    useEffect(() => {\n        const fetchDogs = async () => {\n            try {\n                setLoading(true);\n                let url = `http://localhost:5000/dogs?page=${page}`;\n                \n                // Add breed filters\n                if (selectedBreeds.length > 0) {\n                    selectedBreeds.forEach(breed => {\n                        url += `&breed=${encodeURIComponent(breed)}`;\n                    });\n                }\n\n                if (priceRange.min) url += `&min_price=${priceRange.min}`;\n                if (priceRange.max) url += `&max_price=${priceRange.max}`;\n                \n                const response = await fetch(url);\n                \n                if (!response.ok) {\n                    throw new Error('Failed to fetch dogs');\n                }\n                \n                const data = await response.json();\n                setDogs(data.dogs);\n            } catch (err) {\n                setError('Error loading dogs. Please try again.');\n                console.error(err);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchDogs();\n    }, [page, selectedBreeds]);\n\n    const handleBreedChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        const options = Array.from(e.target.selectedOptions, option => option.value);\n        setSelectedBreeds(options);\n        setPage(1); // Reset to first page when filters change\n    };\n\n    const handlePriceChange = (type: 'min' | 'max', value: string) => {\n        setPriceRange(prev => ({ ...prev, [type]: value }));\n    };\n\n    const handleNextPage = () => {\n        setPage(page + 1);\n    };\n\n    const handlePrevPage = () => {\n        if (page > 1) {\n            setPage(page - 1);\n        }\n    };\n\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n\n    const toggleBreed = (breed: string) => {\n        setSelectedBreeds(prev => \n            prev.includes(breed) \n                ? prev.filter(b => b !== breed) \n                : [...prev, breed]\n        );\n        setPage(1); // Reset to first page when filters change\n    };\n\n    return (\n        <main className=\"min-h-screen p-8\">\n            <div className=\"max-w-7xl mx-auto\">\n                <header className=\"flex justify-between items-center mb-12\">\n                    <h1 className=\"text-3xl font-bold\">Dog Adoption Center</h1>\n                    <div className=\"flex gap-4\">\n                        <Link href=\"/login\" className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition\">\n                            Login\n                        </Link>\n                    </div>\n                </header>\n\n                {/* Filter Section */}\n                <div className=\"mb-8 p-4 bg-gray-50 rounded-lg\">\n                    <h2 className=\"text-xl font-semibold mb-4\">Filter Dogs</h2>\n                    <div className=\"flex flex-wrap gap-4\">\n                        <div className=\"w-full md:w-64 relative\">\n                            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Breed\n                            </label>\n                            <button \n                                type=\"button\"\n                                className=\"w-full flex justify-between items-center px-3 py-2 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                                onClick={() => setDropdownOpen(!dropdownOpen)}\n                            >\n                                <span>{selectedBreeds.length ? `${selectedBreeds.length} selected` : 'Select breeds'}</span>\n                                <svg className=\"h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                    <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                                </svg>\n                            </button>\n                            \n                            {dropdownOpen && (\n                                <div className=\"absolute mt-1 w-full bg-white border border-gray-300 rounded-md shadow-lg z-10 max-h-60 overflow-auto\">\n                                    {breeds.map(breed => (\n                                        <div key={breed} className=\"flex items-center px-3 py-2 hover:bg-gray-100\">\n                                            <input\n                                                type=\"checkbox\"\n                                                id={`breed-${breed}`}\n                                                checked={selectedBreeds.includes(breed)}\n                                                onChange={() => toggleBreed(breed)}\n                                                className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                                            />\n                                            <label \n                                                htmlFor={`breed-${breed}`}\n                                                className=\"ml-2 block text-sm text-gray-900 w-full cursor-pointer\"\n                                            >\n                                                {breed}\n                                            </label>\n                                        </div>\n                                    ))}\n                                </div>\n                            )}\n                        </div>\n                    \n                    </div>\n                </div>\n\n                {error && (\n                    <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n                        {error}\n                    </div>\n                )}\n\n                {loading ? (\n                    <div className=\"flex justify-center items-center h-64\">\n                        <div className=\"flex flex-col items-center\">\n                            <div className=\"relative h-16 w-16 animate-spin\">\n                                <Image \n                                    src=\"/vercel.svg\"\n                                    alt=\"Loading\"\n                                    width={64}\n                                    height={64}\n                                    className=\"text-blue-600 animate-pulse\"\n                                />\n                            </div>\n                            <p className=\"mt-2 text-blue-500 font-medium\">Loading dogs...</p>\n                        </div>\n                    </div>\n                ) : (\n                    <>\n                        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n                            {dogs.map((dog) => (\n                                <div \n                                    key={dog.id} \n                                    className=\"bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition\"\n                                    onClick={() => router.push(`/dogs/${dog.id}`)}\n                                >\n                                    <div className=\"relative h-56 w-full\">\n                                        <Image\n                                            src={dog.image}\n                                            alt={dog.name}\n                                            fill\n                                            className=\"object-cover\"\n                                        />\n                                    </div>\n                                    <div className=\"p-4\">\n                                        <h2 className=\"text-xl font-bold\">{dog.name}</h2>\n                                        <p className=\"text-gray-600\">{dog.breed}</p>\n                                        <p className=\"text-green-600 font-semibold mt-2\">${dog.price}</p>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n\n                        <div className=\"mt-8 flex justify-center gap-4\">\n                            <button\n                                onClick={handlePrevPage}\n                                disabled={page <= 1}\n                                className=\"px-4 py-2 bg-gray-200 rounded-md hover:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed\"\n                            >\n                                Previous\n                            </button>\n                            <span className=\"px-4 py-2\">Page {page}</span>\n                            <button\n                                onClick={handleNextPage}\n                                className=\"px-4 py-2 bg-gray-200 rounded-md hover:bg-gray-300\"\n                            >\n                                Next\n                            </button>\n                        </div>\n                    </>\n                )}\n            </div>\n        </main>\n    );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}